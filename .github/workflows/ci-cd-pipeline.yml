name: CI/CD Pipeline

on:
  push:
    branches:
      - develop

permissions:
  contents: write   # para o merge em main
  pull-requests: write

jobs:
  test-and-merge:
    runs-on: ubuntu-latest
    env:
      MONGO_URI: ${{ secrets.MONGO_URI }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      PAT:       ${{ secrets.PAT }}

    steps:
      # 1) Checkout completo
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT }}

      # 2) Python
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 3) Instala as libs Python + Robot + Browser
      - run: |
          pip install -r cinema-automation/requirements.txt
          # O rfbrowser init jÃ¡ faz install-deps internamente:
          python -m robotframework_browser.init

      # 4) Roda os testes (sempre gera logs)
      - name: Run Robot tests
        working-directory: ./cinema-automation
        run: |
          mkdir -p logs
          robot --outputdir logs tests/
        continue-on-error: true

      # 5) Upload dos logs
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: robot-logs
          path: cinema-automation/logs/

      # 6) Falha se algum teste falhou
      - name: Abort if tests failed
        run: |
          if grep -q 'status="FAIL"' cinema-automation/logs/output.xml; then
            echo "ðŸš¨ Testes falharam, nÃ£o vamos mergear"
            exit 1
          fi

      # 7) Merge develop â†’ main
      - name: Merge develop into main
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git fetch origin main
          git checkout main
          git merge --no-ff origin/develop -m "ðŸ”€ Merge develop â†’ main [skip ci]"
          git push origin main
        env:
          GIT_TOKEN: ${{ secrets.PAT }}
