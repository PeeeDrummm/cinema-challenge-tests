name: CI/CD - Cinema Challenge Tests

on:
  push:
    branches:
      - develop

# Permiss√µes necess√°rias para o workflow interagir com o reposit√≥rio
permissions:
  contents: write
  pull-requests: write

jobs:
  test-and-manage-pr:
    name: Test, Update README, and Manage PR
    runs-on: ubuntu-22.04

    # Vari√°veis de ambiente secretas dispon√≠veis para todos os passos deste job
    env:
      MONGO_URI: ${{ secrets.MONGO_URI }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- ETAPA 1: EXECU√á√ÉO DOS TESTES ---
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          pip install -r cinema-automation/requirements.txt
          pip install pytz
      
      - name: Install Playwright system dependencies
        run: python -m playwright install-deps

      - name: Install Playwright browsers
        run: python -m playwright install

      - name: Run Robot Framework tests
        # Garante que o comando seja executado na pasta correta
        working-directory: ./cinema-automation
        run: robot --outputdir logs tests/

      # --- ETAPA 2: ATUALIZA√á√ÉO DO README ---
      - name: Update README.md with test results
        run: python update_readme.py
        # Continua mesmo se este passo falhar, para n√£o bloquear o PR
        continue-on-error: true 

      # --- ETAPA 3: COMMIT E CRIA√á√ÉO INTELIGENTE DO PULL REQUEST ---
      - name: Create Pull Request with updated README
        id: cpr
        # Esta a√ß√£o especializada faz tudo o que precisamos:
        # 1. Verifica se h√° mudan√ßas (como o README.md atualizado).
        # 2. Se houver, faz o commit dessas mudan√ßas.
        # 3. Cria um Pull Request da 'develop' para a 'main'.
        # 4. Se n√£o houver mudan√ßas, n√£o faz nada e termina com sucesso.
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.PAT }}
          commit-message: "docs: ü§ñ Atualiza README com os √∫ltimos resultados dos testes"
          branch: develop
          base: main
          title: "üîÅ [Automated] Merge develop into main"
          body: |
            ‚úÖ Testes automatizados passaram com sucesso.
            üìä README atualizado com os resultados.
            Este PR foi gerado automaticamente e est√° pronto para o auto-merge.

      # --- ETAPA 4: AUTO-MERGE CONDICIONAL ---
      - name: Enable Auto-Merge for Owner
        # Este passo s√≥ roda se um PR foi DE FATO criado ou atualizado
        # E se o autor do push original for VOC√ä.
        if: steps.cpr.outputs.pull-request-operation != 'none' && github.actor == 'PeeeDrummm'
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
          PR_URL: ${{ steps.cpr.outputs.pull-request-url }}
        run: |
          echo "Workflow initiated by repository owner. Enabling auto-merge for PR #${{ steps.cpr.outputs.pull-request-number }}"
          # Faz o merge, mas N√ÉO deleta a branch 'develop'
          gh pr merge "$PR_URL" --auto --squash
