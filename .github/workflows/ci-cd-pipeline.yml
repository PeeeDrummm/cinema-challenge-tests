name: CI/CD - Cinema Challenge Tests

on:
  push:
    branches:
      - develop

permissions:
  contents: write
  pull-requests: write

jobs:
  test-and-manage-pr:
    name: Test, Update README and Merge
    # n√£o roda se o commit tiver [skip ci]
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-22.04

    env:
      MONGO_URI: ${{ secrets.MONGO_URI }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}

    steps:
      # 1) Checkout
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2) Python & depend√™ncias
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          pip install -r cinema-automation/requirements.txt
          pip install pytz

      # 3) Playwright
      - name: Install Playwright system dependencies
        run: python -m playwright install-deps

      - name: Install Playwright browsers
        run: python -m playwright install

      # 4) Executa Robot
      - name: Run Robot Framework tests
        working-directory: ./cinema-automation
        run: robot --outputdir logs tests/

      # 5) Atualiza README
      - name: Update README.md with test results
        run: python update_readme.py
        continue-on-error: true

      # 6) Cria PR (e commita o README atualizado em develop)
      - name: Create Pull Request with updated README
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.PAT }}
          commit-message: "docs: ü§ñ Atualiza README com os √∫ltimos resultados dos testes [skip ci]"
          branch: develop
          base: main
          title: "üîÅ [Automated] Merge develop into main"
          body: |
            ‚úÖ Testes automatizados passaram com sucesso.
            üìä README atualizado com os resultados.
            Este PR foi gerado automaticamente.

      # 7) Faz merge se for voc√™ quem disparou
      - name: Merge Pull Request for Owner
        if: steps.cpr.outputs.pull-request-operation != 'none' && github.actor == 'PeeeDrummm'
        env:
          GH_TOKEN: ${{ secrets.PAT }}
          PR_URL: ${{ steps.cpr.outputs.pull-request-url }}
        run: |
          echo "Merging PR #${{ steps.cpr.outputs.pull-request-number }}..."
          gh pr merge "$PR_URL" --squash --delete-branch --yes
