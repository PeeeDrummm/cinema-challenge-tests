name: CI/CD - Cinema Challenge Tests

on:
  push:
    branches:
      - develop

permissions:
  contents: write
  pull-requests: write

jobs:
  test-and-manage-pr:
    name: Test, Upload Logs, Update README & Sync Branches
    runs-on: ubuntu-22.04

    env:
      MONGO_URI: ${{ secrets.MONGO_URI }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r cinema-automation/requirements.txt
          pip install pytz

      - name: Install Playwright dependencies
        run: |
          python -m playwright install-deps
          python -m playwright install

      - name: Run Robot Framework tests
        working-directory: ./cinema-automation
        run: robot --outputdir logs tests/

      - name: Upload test logs
        uses: actions/upload-artifact@v3
        with:
          name: robot-logs
          path: cinema-automation/logs/

      - name: Update README.md with test results
        run: python update_readme.py
        continue-on-error: true

      - name: Create Pull Request to main
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.PAT }}
          branch: develop
          base: main
          commit-message: "docs: ðŸ¤– Atualiza README e cÃ³digo na main [skip ci]"
          title: "ðŸš€ Merge develop into main"
          body: |
            âœ… Testes passaram.
            ðŸ“Š README e cÃ³digo prontos para a main.

      - name: Auto-merge PR for Owner
        if: steps.cpr.outputs.pull-request-operation != 'none' && github.actor == 'PeeeDrummm'
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        run: |
          gh pr merge "${{ steps.cpr.outputs.pull-request-url }}" --squash

      - name: Sync develop with main
        if: success() && github.actor == 'PeeeDrummm'
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git fetch origin main
          git checkout develop
          git merge origin/main --no-ff -m "chore: sync develop with main [skip ci]"
          git push origin develop
